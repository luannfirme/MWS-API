// <auto-generated />
using System;
using MWS.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MWS.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FuncionarioOrdemServicoExecutado", b =>
                {
                    b.Property<Guid>("FuncionariosId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ServicosId")
                        .HasColumnType("char(36)");

                    b.HasKey("FuncionariosId", "ServicosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("FuncionarioOrdemServicoExecutado");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rg")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("Nome");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Numero")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Cep");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Contato")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Fornecedores", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<Guid>("CargoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Salario")
                        .HasColumnType("double");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("Cpf");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("Nome");

                    b.ToTable("Funcionarios", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.FuncionarioCargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("FuncionariosCargos", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.OrdemServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<double?>("PrecoFinal")
                        .HasColumnType("double");

                    b.Property<double>("PrecoInicial")
                        .HasColumnType("double");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo");

                    b.HasIndex("VeiculoId");

                    b.ToTable("OrdensServicos", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.OrdemServicoExecutado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("OrdemServicoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("OrdemServicoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("OrdensServicosExecutados");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("char(36)");

                    b.Property<double>("PrecoCompra")
                        .HasColumnType("double");

                    b.Property<double>("PrecoVenda")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("Codigo");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("Codigo");

                    b.ToTable("Servicos", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Cor")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<Guid>("VeiculoModeloId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Placa");

                    b.HasIndex("VeiculoModeloId");

                    b.ToTable("Veiculos", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.VeiculoModelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("VeiculoMontadoraId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.HasIndex("VeiculoMontadoraId");

                    b.ToTable("VeiculosModelos", (string)null);
                });

            modelBuilder.Entity("MWS.Domain.Entities.VeiculoMontadora", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("VeiculosMontadoras", (string)null);
                });

            modelBuilder.Entity("OrdemServicoProduto", b =>
                {
                    b.Property<Guid>("ProdutosId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ServicosId")
                        .HasColumnType("char(36)");

                    b.HasKey("ProdutosId", "ServicosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("OrdemServicoProduto");
                });

            modelBuilder.Entity("FuncionarioOrdemServicoExecutado", b =>
                {
                    b.HasOne("MWS.Domain.Entities.Funcionario", null)
                        .WithMany()
                        .HasForeignKey("FuncionariosId")
                        .IsRequired();

                    b.HasOne("MWS.Domain.Entities.OrdemServicoExecutado", null)
                        .WithMany()
                        .HasForeignKey("ServicosId")
                        .IsRequired();
                });

            modelBuilder.Entity("MWS.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("MWS.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("MWS.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("MWS.Domain.Entities.FuncionarioCargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .IsRequired();

                    b.HasOne("MWS.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Cargo");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("MWS.Domain.Entities.OrdemServico", b =>
                {
                    b.HasOne("MWS.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Servicos")
                        .HasForeignKey("VeiculoId")
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("MWS.Domain.Entities.OrdemServicoExecutado", b =>
                {
                    b.HasOne("MWS.Domain.Entities.OrdemServico", "OrdemServico")
                        .WithMany("Servicos")
                        .HasForeignKey("OrdemServicoId")
                        .IsRequired();

                    b.HasOne("MWS.Domain.Entities.Servico", "Servico")
                        .WithMany("Servicos")
                        .HasForeignKey("ServicoId")
                        .IsRequired();

                    b.Navigation("OrdemServico");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Produto", b =>
                {
                    b.HasOne("MWS.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Veiculo", b =>
                {
                    b.HasOne("MWS.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Veiculos")
                        .HasForeignKey("ClienteId")
                        .IsRequired();

                    b.HasOne("MWS.Domain.Entities.VeiculoModelo", "Modelo")
                        .WithMany("Veiculos")
                        .HasForeignKey("VeiculoModeloId")
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("MWS.Domain.Entities.VeiculoModelo", b =>
                {
                    b.HasOne("MWS.Domain.Entities.VeiculoMontadora", "Montadora")
                        .WithMany("Modelos")
                        .HasForeignKey("VeiculoMontadoraId")
                        .IsRequired();

                    b.Navigation("Montadora");
                });

            modelBuilder.Entity("OrdemServicoProduto", b =>
                {
                    b.HasOne("MWS.Domain.Entities.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosId")
                        .IsRequired();

                    b.HasOne("MWS.Domain.Entities.OrdemServico", null)
                        .WithMany()
                        .HasForeignKey("ServicosId")
                        .IsRequired();
                });

            modelBuilder.Entity("MWS.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MWS.Domain.Entities.OrdemServico", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Servico", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("MWS.Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("MWS.Domain.Entities.VeiculoModelo", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("MWS.Domain.Entities.VeiculoMontadora", b =>
                {
                    b.Navigation("Modelos");
                });
#pragma warning restore 612, 618
        }
    }
}
